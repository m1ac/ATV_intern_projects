using ProjectsContainer.Models;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Xml;
using System.Xml.Linq;

namespace ProjectsContainer.Controllers
{
    public class CheckConfigController : Controller
    {
        //
        // GET: /CheckConfig/

        List<Setting> settings = new List<Setting>();
        List<KeyValue> KeyList = new List<KeyValue>();

        void Read_xml()
        {
            string xmlFilePath = Server.MapPath("Content/settings") + "\\settings.xml";
            XDocument xmlDoc = XDocument.Load(xmlFilePath);
            var filterValueList = xmlDoc.Root.Element("webConfigFilter").Elements("keyName").ToList();
            foreach (var item in filterValueList)
            {
                string[] bol = item.Value.Split('=');
                if (bol.Length > 1)
                {
                    KeyList.Add(new KeyValue() { Key = bol[0], Value = bol[1].ToLower() });
                }
                else
                {
                    KeyList.Add(new KeyValue() { Key = bol[0], Value = "" });
                }
            }

            var pathValueList = xmlDoc.Root.Element("webConfig").Elements("path").ToList();
            foreach (var item in pathValueList)
            {
                Find(item + "\\web.config");
            }

            /*StreamReader oku1 = new StreamReader(Server.MapPath("Content/tmp_config")+"\\KeyList.txt");
            string l = "";
            while ((l = oku1.ReadLine()) != null)
            {
                string[] bol = l.Split('=');
                if (bol.Length > 1)
                {
                    KeyList.Add(new KeyValue() { Key = bol[0], Value = bol[1].ToLower() });
                }
                else
                {
                    KeyList.Add(new KeyValue() { Key = bol[0], Value = "" });
                }
            }
            oku1.Close();

            StreamReader oku = new StreamReader(Server.MapPath("Content/tmp_config") + "\\PathList.txt");
            string line = "";
            while ((line = oku.ReadLine()) != null)
            {
                Find(line + "\\web.config");
            }
            oku.Close();*/
        }

        void Find(string path)
        {
            System.IO.File.Copy(path, Server.MapPath("Content/tmp_config") + "\\Web.config");
            XmlDocument doc = new XmlDocument();
            doc.LoadXml(System.IO.File.ReadAllText(Server.MapPath("Content/tmp_config") + "\\Web.config"));
            XmlNode pNode = doc.SelectSingleNode("configuration");

            foreach (XmlNode item in pNode.SelectNodes("appSettings"))
            {
                foreach (XmlNode add in item.SelectNodes("add"))
                {
                    if (KeyList.Select(x => x.Key).ToList().Contains(add.Attributes[0].Value))
                    {
                        string val = ((KeyValue)KeyList.Where(x => x.Key == add.Attributes[0].Value).ToList()[0]).Value;
                        if ((val != "") && (val.ToLower() != add.Attributes[1].Value.ToString().ToLower()))
                        {
                            continue;
                        }
                        else
                        {
                            settings.Add(new Setting() { Name = add.Attributes[0].Value, Value = add.Attributes[1].Value, Path = path });
                        }
                    }
                }
            }
            System.IO.File.Delete(Server.MapPath("Content/tmp_config") + "\\Web.config");
            //dt1.ItemsSource = settings.ToList();
        }

        public ActionResult Index()
        {
            ViewBag.activeConfig = "active";
            Read_xml();
            return View(settings);
        }

    }
}
